# Snapshot tasks specific to wordpress
# Depends on wp-cli available on the host, so will install/upgrade on run
# --------------------------------------------------
- name: Install WP Cli Tooling
  block:
    - name: check for wp-cli installed
      register: wpcli_exists
      stat:
        path: "{{wp_cli_bin_path}}"

    - name: install wp-cli
      when: not wpcli_exists.stat.exists
      include_role:
        name: ansible.wp-cli

    - name: update wp-cli
      when: wpcli_exists.stat.exists
      include_role:
        name: ansible.wp-cli

    # confirm wp version
    - shell: wp core version --allow-root
      register: platform_version
      args:
        chdir: "{{docroot}}"
    - set_fact:
        platform_version: "{{platform_version.stdout}}"

# remove revisr and legacy docroot gitops
# @todo: This doesn't really belong in this playbook. Prune it out once the legacy setups are phased-out
#- name: Remove Legacy Devops
#  block:
#    - shell: wp plugin uninstall revisr --allow-root --deactivate
#      ignore_errors: yes
#      args:
#        chdir: "{{docroot}}"
#    - file:
#        path: "{{docroot}}/.git"
#        state: absent
#    - file:
#        path: "{{docroot}}/_rwmops"
#        state: absent
#    - file:
#        path: "{{docroot}}/wp-content/uploads/revisr-backups"
#        state: absent

- name: Vacate Service Directory
  block:
    - set_fact:
        service_root: "{{remote_opsdir}}/{{service_name}}"
    - file:
        path: "{{service_root}}"
        state: absent
    - file:
        path: "{{service_root}}"
        state: directory

- name: Refill Service Directory
  block:
    - name: Prepare dir tree
      block:
        - file:
            path: "{{service_root}}/data"
            state: directory
        - file:
            path: "{{service_root}}/docroot"
            state: directory

    # data <- mysqldump
    - shell:
        cmd: "wp db export --allow-root {{service_root}}/data/export.sql"
      args:
        chdir: "{{docroot}}"

    #-- file ops use synchronize (rsync wrapper) with delegation to remote. effectively: rsync local-local
    # full docroot
    - copy:
        src: 'files/excludes.txt'
        dest: '{{docroot}}/.rsync-filter'

    - synchronize:
        src: "{{docroot}}/"
        dest: "{{service_root}}/docroot"
      delegate_to: "{{ inventory_hostname }}"
